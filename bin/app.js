/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const SPARQL_ENDPOINT = 'https://data.adamlink.nl/_api/datasets/menno/alles/services/alles/sparql'\n// const SPARQL_ENDPOINT = 'https://data.adamlink.nl/AdamNet/all/services/endpoint'\nconst SPARQL_HREF = 'https://data.adamlink.nl/AdamNet/all/services/endpoint'\n\nPERIOD_BOUNDS = {\n  start: 1600,\n  end: (new Date()).getFullYear()\n}\n\nfunction createMapsQuery (data) {\n  const round = (num) => Math.round(num * 100000) / 100000\n\n  return `\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX geo: <http://www.opengis.net/ont/geosparql#>\nPREFIX sem: <http://semanticweb.cs.vu.nl/2009/11/sem/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT ?map ?img ?x ?y ?title ?begin {\n  ?map dct:spatial ?spatial .\n  ?map foaf:depiction ?img .\n  ?map dc:title ?title .\n\n  ?map sem:hasBeginTimeStamp ?begin .\n  FILTER (year(xsd:dateTime(?begin)) >= ${data.period.start}) .\n  FILTER (year(xsd:dateTime(?begin)) <= ${data.period.end}) .\n\n  ?spatial dc:type \"outline\"^^xsd:string .\n  ?spatial geo:hasGeometry/geo:asWKT ?wkt .\n  ?spatial wdt:P2046 ?km2 .\n  bind (bif:st_geomfromtext(\"POINT(${round(data.coordinates.lng)} ${round(data.coordinates.lat)})\") as ?point)\n  bind (bif:st_geomfromtext(?wkt) as ?outline)\n  FILTER (bif:st_intersects(?point, ?outline))\n}\nORDER BY ASC(?km2)\nLIMIT 25`.trim()\n}\n\nfunction createCollectionsQuery () {\n  return `\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT ?provenance ?collection (COUNT(?map) AS ?count) WHERE {\n  ?map dc:type \"kaart\"^^xsd:string .\n  ?map void:inDataset ?collection .\n  ?map dct:provenance ?provenance .\n  ?map dct:spatial ?spatial .\n  ?spatial dc:type \"outline\"^^xsd:string .\n}\nGROUP BY ?provenance ?collection\nORDER BY DESC(?count)\nLIMIT 100\n`.trim()\n}\n\nfunction executeQuery (query) {\n  const queryString = m.buildQueryString({\n    query\n  })\n\n  return fetch(SPARQL_ENDPOINT, {\n    method: 'POST',\n    body: queryString,\n    json: true,\n    headers: {\n      'Accept': 'application/sparql-results+json',\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    }\n  })\n    .catch((err) => console.error('Executing query failed', err))\n    .then((response) => response.json())\n    .then((json) => json.results.bindings)\n    .catch((err) => console.error('Parsing results failed', err))\n}\n\nfunction createRangeSlider (vnode, min, max, value, oninput) {\n  return m('input', {\n    type: 'range',\n    min,\n    max,\n    value,\n    oninput: (event) => {\n      const value = parseInt(event.target.value)\n      oninput(value)\n    }\n  })\n}\n\nconst CollectionsSelect = {\n  collections: undefined,\n  view: (vnode) => m('select', {\n    multiple: 'multiple'\n  }, vnode.state.collections && vnode.state.collections.map((collection) =>\n    m('option', `${collection.provenance.value} (${collection.count.value} kaarten)`)\n  )),\n  oncreate: (vnode) => {\n    const query = createCollectionsQuery()\n    executeQuery(query)\n      .then((collections) => {\n        Object.assign(vnode.state, {collections})\n        m.redraw()\n      })\n  }\n}\n\nconst GeoIntersects = {\n  view: (vnode) => m('div', {\n    id: 'map-container'\n  }, [\n    m(Map, {\n      moveEnd: vnode.attrs.coordinatesUpdated\n    })\n  ])\n}\n\nconst Form = {\n  view: (vnode) => m('li', [\n    m('h2', 'Parameters'),\n    m('form', {\n      onsubmit: (event) => {\n        event.preventDefault()\n        vnode.attrs.executeMapsQuery()\n      }\n    }, [\n      m(CollectionsSelect),\n      createRangeSlider(vnode, PERIOD_BOUNDS.start, PERIOD_BOUNDS.end, vnode.attrs.data.period.start, (value) => {\n        vnode.attrs.data.period.start = value\n        if (vnode.attrs.data.period.end < value) {\n          vnode.attrs.data.period.end = value\n        }\n        vnode.attrs.formUpdated(vnode.attrs.data)\n      }),\n      createRangeSlider(vnode, PERIOD_BOUNDS.start, PERIOD_BOUNDS.end, vnode.attrs.data.period.end, (value) => {\n        vnode.attrs.data.period.end = value\n        if (vnode.attrs.data.period.start > value) {\n          vnode.attrs.data.period.start = value\n        }\n        vnode.attrs.formUpdated(vnode.attrs.data)\n      }),\n      m(GeoIntersects, {\n        coordinatesUpdated: (coordinates) => {\n          vnode.attrs.data.coordinates = {\n            lat: coordinates.lat,\n            lng: coordinates.lng\n          }\n          vnode.attrs.formUpdated(vnode.attrs.data)\n          m.redraw()\n        }\n      }),\n      m('button', {\n        type: 'submit'\n      }, 'Voer query uit op SPARQL-endpoint')\n    ])\n  ])\n}\n\nconst Map = {\n  view: () => m('div', {\n    id: 'map'\n  }),\n  oncreate: (vnode) => {\n    const map = L.map('map').setView([52.37064, 4.90047], 14)\n\n    L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>',\n      subdomains: 'abcd',\n      maxZoom: 19\n    }).addTo(map)\n\n    map.on('moveend', (event) => {\n      if (vnode.attrs.moveEnd) {\n        vnode.attrs.moveEnd(map.getCenter())\n      }\n    })\n  }\n}\n\nconst Sparql = {\n  data: {\n    editor: undefined\n  },\n  view: (vnode) => m('li', [\n    m('h2', 'SPARQL-query'),\n    m('textarea', {\n      id: 'sparql-query'\n    }, createMapsQuery(vnode.attrs.data)),\n    m('div', [\n      m('a', {\n        href: `${SPARQL_HREF}#query=${encodeURIComponent(createMapsQuery(vnode.attrs.data))}&` +\n        `contentTypeConstruct=text%2Fturtle&contentTypeSelect=application%2Fsparql-results%2Bjson&` +\n        `endpoint=${encodeURIComponent(SPARQL_ENDPOINT)}&requestMethod=POST&tabTitle=Query&` +\n        `headers=%7B%7D&outputFormat=table`\n      }, 'Open query in AdamLink')\n    ])\n  ]),\n  oncreate: (vnode) => {\n    const element = document.getElementById('sparql-query')\n\n    const editor = CodeMirror.fromTextArea(element, {\n      lineNumbers: true,\n      readOnly: true,\n      mode: 'sparql',\n      foldGutter: true,\n      gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter']\n    })\n\n    editor.foldCode(CodeMirror.Pos(0, 0))\n    vnode.state.data.editor = editor\n  },\n  onupdate: (vnode) => {\n    const editor = vnode.state.data.editor\n    editor.setValue(createMapsQuery(vnode.attrs.data))\n    editor.foldCode(CodeMirror.Pos(0, 0))\n  }\n}\n\nfunction renderResults (data) {\n  if (data && data.length) {\n    return m('ol', {\n      id: 'results'\n    }, data.map((result) => m('li', [\n      m('h3', {\n        class: 'truncate',\n        title: result.title.value\n      }, result.title.value),\n      m('a', {\n        href: result.map.value\n      }, [\n        m('img', {\n          src: result.img.value\n        })\n      ])\n    ])))\n  } else {\n    return m('p', 'Geen resultaten')\n  }\n}\n\nconst Results =  {\n  view: (vnode) => m('li', [\n    m('h2', 'Resultaten'),\n    renderResults(vnode.attrs.data)\n  ])\n}\n\nfunction executeMapsQuery (vnode) {\n  const query = createMapsQuery(vnode.state.data.form)\n  executeQuery(query)\n    .then((results) => {\n      Object.assign(vnode.state.data, {results})\n      m.redraw()\n    })\n}\n\nconst App = {\n  data: {\n    results: undefined,\n    form: {\n      period: Object.assign({}, PERIOD_BOUNDS),\n      coordinates: {\n        lat: 52.37064,\n        lng: 4.90047\n      }\n    }\n  },\n  view: (vnode) => ([\n    m('header', 'Kaarten uit Adamlink met SPARQL'),\n    m('main', [\n      m('p', 'Hier komt de introductie! En het wordt ook nog mooier dan dit natuurlijk.'),\n      m('ol', {\n        class: 'sections'\n      }, [\n        m(Form, {\n          data: vnode.state.data.form,\n          formUpdated: (form) => Object.assign(vnode.state.data, form),\n          executeMapsQuery: () => executeMapsQuery(vnode)\n        }),\n        m(Sparql, {\n          data: vnode.state.data.form\n        }),\n        m(Results, {\n          data: vnode.state.data.results\n        })\n      ])\n    ])\n  ])\n}\n\nm.mount(document.body, App)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ });