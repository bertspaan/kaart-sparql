!function(t){var e={};function a(r){if(e[r])return e[r].exports;var n=e[r]={i:r,l:!1,exports:{}};return t[r].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=t,a.c=e,a.d=function(t,e,r){a.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},a.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=0)}([function(t,e){const a="https://api.druid.datalegend.net/datasets/adamnet/all/services/endpoint/sparql",r="PREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX geo: <http://www.opengis.net/ont/geosparql#>\nPREFIX sem: <http://semanticweb.cs.vu.nl/2009/11/sem/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n".trim();function n(t){const e=t=>Math.round(1e5*t)/1e5;let a="";if(1===t.collections.length)a=`?map dct:provenance "${t.collections[0]}"^^xsd:string .\n`;else if(t.collections.length>1){a=`\n  FILTER (?provenance IN (\n${`${t.collections.map(t=>`    "${t}"^^xsd:string`).join(",\n")}`})\n  ) .`}let n="";if(t.creator.length>1){n=`FILTER REGEX(?creator, "${t.creator.replace(/\\([\s\S])|(")/g,"\\$1$2")}", "i") .`}return`${r}\n\nSELECT ?map ?img ?title ?provenance ?creator ?begin {\n  ?map dct:spatial ?spatial .\n  ?map foaf:depiction ?img .\n  ?map dc:title ?title .\n  ?map dct:provenance ?provenance .\n  ?map dc:creator ?creator .\n  ?map sem:hasBeginTimeStamp ?begin .\n\n  ?spatial dc:type "outline" .\n  ?spatial geo:hasGeometry/geo:asWKT ?wkt .\n  ?spatial wdt:P2046 ?km2 .\n  ${a}\n  ${n}\n  FILTER (year(xsd:dateTime(?begin)) >= ${t.period.start}) .\n  FILTER (year(xsd:dateTime(?begin)) <= ${t.period.end}) .\n  bind (bif:st_geomfromtext("POINT(${e(t.coordinates.lng)} ${e(t.coordinates.lat)})") as ?point)\n  bind (bif:st_geomfromtext(?wkt) as ?outline)\n  FILTER (bif:st_intersects(?point, ?outline))\n}\nORDER BY ASC(?km2)\nLIMIT 25`.trim()}function o(t){const e=m.buildQueryString({query:t});return fetch(a,{method:"POST",body:e,json:!0,headers:{Accept:"application/sparql-results+json","Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}}).catch(t=>console.error("Executing query failed",t)).then(t=>t.json()).then(t=>t.results.bindings).catch(t=>console.error("Parsing results failed",t))}PERIOD_BOUNDS={start:1550,end:(new Date).getFullYear()};const s={value:void 0,oncreate:t=>Object.assign(t.state,{value:t.attrs.value}),view:t=>m("div",{class:"range-slider"},[m("label",{for:`range-slider-${t.attrs.id}`},`${t.attrs.label} ${t.attrs.value}`),m("input",{id:`range-slider-${t.attrs.id}`,type:"range",min:t.attrs.start,max:t.attrs.end,value:t.attrs.value,oninput:e=>{const a=parseInt(e.target.value);t.attrs.valueChanged(a)}})])},i={collections:void 0,view:t=>[m("fieldset",{id:"form-collections",onchange:e=>{const a=document.querySelectorAll("input[name=form-collections-checkbox]:checked"),r=Array.prototype.map.call(a,t=>t.value);t.attrs.collectionsUpdated(r)}},t.state.collections&&t.state.collections.map((t,e)=>m("div",[m("input",{type:"checkbox",name:"form-collections-checkbox",id:`form-collections-checkbox-${e}`,value:t.provenance.value}),m("label",{for:`form-collections-checkbox-${e}`},[m("span",t.provenance.value),m("span",{class:"form-collections-map-count"},`${t.count.value} ${1===parseInt(t.count.value)?"kaart":"kaarten"}`)])])))],oncreate:t=>{o(`${r}\n\nSELECT DISTINCT ?provenance (COUNT(?map) AS ?count) WHERE {\n  ?map dct:spatial ?spatial .\n  ?map foaf:depiction ?img .\n  ?map dc:title ?title .\n  ?map sem:hasBeginTimeStamp ?begin .\n  ?map dct:provenance ?provenance .\n\n  ?spatial dc:type "outline" .\n  ?spatial geo:hasGeometry/geo:asWKT ?wkt .\n  ?spatial wdt:P2046 ?km2 .\n}\nGROUP BY ?provenance\nORDER BY DESC(?count)\nLIMIT 100\n`.trim()).then(e=>{Object.assign(t.state,{collections:e}),m.redraw()})}},l={view:t=>m("button",{type:"submit",onclick:e=>{t.attrs.onclick&&t.attrs.onclick(e)}},"â–¶ Voer query uit")},d={view:t=>m("div",{id:"map-container"},[m(p,{moveEnd:t.attrs.coordinatesUpdated}),m("div",{class:"map-crosshair"},[m("img",{src:"images/crosshair.svg"})])])},c={view:t=>m("li",[m("h2","Parameters"),m("form",{onsubmit:e=>{e.preventDefault(),t.attrs.executeMapsQuery()}},[m("div",[m("label",{for:"form-collections",class:"filter-label"},"Laat kaarten uit deze collecties zien:"),m("div",{class:"filter"},[m(i,{collectionsUpdated:e=>{t.attrs.data.collections=e,t.attrs.formUpdated(t.attrs.data)}})])]),m("div",[m("label",{class:"filter-label"},"Laat kaarten van deze maker zien:"),m("div",{class:"filter"},[m("input",{value:t.attrs.data.creator,type:"text",oninput:e=>{const a=e.target.value;t.attrs.data.creator=a,t.attrs.formUpdated(t.attrs.data)},placeHolder:"Zoek op exacte tekst, of gebruik een reguliere expressie"})])]),m("div",[m("label",{class:"filter-label"},"Laat kaarten zien uit deze periode:"),m("div",{id:"period-filter",class:"filter"},[m(s,{id:"start",label:"Van",start:PERIOD_BOUNDS.start,end:PERIOD_BOUNDS.end,value:t.attrs.data.period.start,valueChanged:e=>{t.attrs.data.period.start=e,t.attrs.data.period.end<e&&(t.attrs.data.period.end=e),t.attrs.formUpdated(t.attrs.data)}}),m(s,{id:"end",label:"; tot",start:PERIOD_BOUNDS.start,end:PERIOD_BOUNDS.end,value:t.attrs.data.period.end,valueChanged:e=>{t.attrs.data.period.end=e,t.attrs.data.period.start>e&&(t.attrs.data.period.start=e),t.attrs.formUpdated(t.attrs.data)}})])]),m("div",[m("label",{class:"filter-label"},"Laat kaarten zien die het midden van onderstaande kaart doorkruisen:"),m("div",{class:"filter"},[m(d,{coordinatesUpdated:e=>{t.attrs.data.coordinates={lat:e.lat,lng:e.lng},t.attrs.formUpdated(t.attrs.data),m.redraw()}})])]),m("div",{class:"section-footer"},[m(l)])])])},p={view:()=>m("div",{id:"map"}),oncreate:t=>{const e=L.map("map").setView([52.37064,4.90047],14);L.tileLayer("https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> &copy; <a href="http://cartodb.com/attributions">CartoDB</a>',subdomains:"abcd",maxZoom:19}).addTo(e),e.on("moveend",a=>{t.attrs.moveEnd&&t.attrs.moveEnd(e.getCenter())})}},u={data:{editor:void 0},view:t=>m("li",[m("h2","SPARQL-query"),m("textarea",{id:"sparql-query"},n(t.attrs.data)),m("div",{class:"section-footer"},[m("a",{target:"_blank",href:`https://druid.datalegend.net/AdamNet/all/sparql/endpoint#query=${encodeURIComponent(n(t.attrs.data))}&`+"contentTypeConstruct=text%2Fturtle&contentTypeSelect=application%2Fsparql-results%2Bjson&"+`endpoint=${encodeURIComponent(a)}&requestMethod=POST&tabTitle=Query&`+"headers=%7B%7D&outputFormat=table"},"Open query in SPARQL-editor"),m(l,{onclick:()=>{t.attrs.executeMapsQuery()}})])]),oncreate:t=>{const e=document.getElementById("sparql-query"),a=CodeMirror.fromTextArea(e,{lineNumbers:!0,readOnly:!0,mode:"sparql",foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"]});a.foldCode(CodeMirror.Pos(0,0)),t.state.data.editor=a},onupdate:t=>{const e=t.state.data.editor;e.setValue(n(t.attrs.data)),e.foldCode(CodeMirror.Pos(0,0))}};const v={view:t=>m("li",[m("h2","Resultaten"),function(t,e){return t&&t.length?m("ol",{id:"results"},t.map(t=>m("li",[m("div",{class:"result-values"},[m("h3",{class:"truncate",title:t.title.value},t.title.value),m("span",t.begin.value.slice(0,4))]),m("div",{class:"result-values"},[m("span",{class:"truncate"},t.provenance.value),m("span",{class:"truncate"},t.creator.value)]),m("a",{href:t.map.value},[m("img",{src:t.img.value})])]))):m("p",[m("span","Geen resultaten; "),m(l,{onclick:()=>{e()}}),m("span"," of pas parameters aan.")])}(t.attrs.data,t.attrs.executeMapsQuery)])};function f(t){o(n(t.state.data.form)).then(e=>{Object.assign(t.state.data,{results:e}),m.redraw()})}const g={data:{results:void 0,form:{period:Object.assign({},PERIOD_BOUNDS),coordinates:{lat:52.37064,lng:4.90047},collections:[],creator:""}},view:t=>[m("ol",{class:"sections"},[m(c,{data:t.state.data.form,formUpdated:e=>Object.assign(t.state.data,e),executeMapsQuery:()=>f(t)}),m(u,{data:t.state.data.form,executeMapsQuery:()=>f(t)}),m(v,{data:t.state.data.results,executeMapsQuery:()=>f(t)})])]};m.mount(document.getElementById("app"),g)}]);